name: '.NET Continuous Integration'
description: 'Build and test .NET projects'
branding:
  icon: 'settings'
  color: 'green'
inputs:
  dotnet-version:
    description: 'The .NET SDK version to use'
    required: false
    default: '6.0'
  build-configuration:
    description: 'Configuration to use for building the project'
    required: false
    default: 'Release'
  test-verbosity:
    description: 'Set the verbosity of test results'
    required: false
    default: 'normal'
  additional-build-arguments:
    description: 'Any additional arguments to include with your build command'
    required: false
    default: ''
  additional-test-arguments:
    description: 'Any additional arguments to include with your test command'
    required: false
    default: ''
  working-directory:
    description: 'The working directory where tests should be executed, if not root'
    required: false
    default: ''
runs:
  using: 'composite'
  steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    - name: Change to Working Directory
      if: ${{ inputs.working-directory != '' }}
      env: 
        working_directory: ${{ inputs.working-directory }}
      run: $working_directory
      shell: bash

    - name: Restore dependencies
      run: dotnet restore
      shell: bash

    - name: Build
      env:
        additional-build-arguments: ${{ inputs.additional-build-arguments }}
      run: |
        if [[ -n "${additional-build-arguments}" ]]; then
          additional_build_arguments=$(echo "${additional-build-arguments}" | sed 's/,/ /g')
        fi

        dotnet build --no-restore --configuration ${{ inputs.build-configuration }} $additional_build_arguments
      shell: bash

    - name: Run tests
      env:
        additional-test-arguments: ${{ inputs.additional-test-arguments }}
      run: |
        if [[ -n "${additional-test-arguments}" ]]; then
          additional_test_arguments=$(echo "${additional-test-arguments}" | sed 's/,/ /g')
        fi
        
        dotnet test --no-build --verbosity ${{ inputs.test-verbosity }} $additional_test_arguments
      shell: bash
